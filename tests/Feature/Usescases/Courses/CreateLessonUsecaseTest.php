<?php


namespace Tests\Feature\Usescases\Courses;


use App\Entities\Course;
use App\Entities\Lesson;
use LMS\Modules\Lessons\Repositories\Contracts\LessonRepositoryInterface;
use App\Usescases\Courses\CreateLessonUsecase;
use PHPUnit\Framework\TestCase;

class CreateLessonUsecaseTest extends TestCase
{


    /**
     * @var LessonRepositoryInterface|\Mockery\MockInterface
     */
    private $lessonRepository;

    protected function setUp()
    {
        $this->lessonRepository = \Mockery::mock(LessonRepositoryInterface::class);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @dataProvider data
     * @param $data
     * @param $lesson
     */
    public function test_create_lesson($data, $lesson)
    {
        $this->lessonRepository->shouldReceive('create')->with($data)->andReturn($lesson);

        $usecase = new CreateLessonUsecase($this->lessonRepository);

        $result = $usecase->handle($data);

        $this->assertInstanceOf(Lesson::class, $result);
        $this->assertEquals($data['title'], $result->title);
    }

    public function data()
    {
        $lesson = new Lesson();
        $lesson->title = 'Clase 1';

        $data =  [
            ['data' => [
                'title' => 'Clase 1',
                'content' => 'Este es el contenido de la clase',
                'course_id' => 1
            ],
                'lesson' => $lesson],
        ];

        return $data;
    }

}
